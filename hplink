#!/usr/bin/env bash
# Author: Vanni
# Usage: hplink TYPE DIRECTORY
# Create/update or delete soft-link to hp path for build or remove project.
# TYPE: create, delete, update  
# Ex:  hplink create /hp/opt/mysql
# Ex:  hplink update /hp/opt/mysql 
# Ex:  hplink delete /hp/opt/mysql

if [[ -z "$1" || -z "$2" ]]; then
    echo Usage: hplink TYPE DIRECTORY
    echo Create/update or delete soft-link to hp path for build or remove project.
    echo TYPE: create, delete, update  
    echo Ex:  hplink create /hp/opt/mysql
    echo Ex:  hplink update /hp/opt/mysql 
    echo Ex:  hplink delete /hp/opt/mysql
    exit 0
fi
ALL_TYPE='create update delete'

if [[ ! -a $2 ]]; then
    echo "$2 not exists"
    exit 0
fi

OPT_TYPE=$1                 # 操作类型
SOFT_PATH=$(cd $2;pwd)      # 传入的软件安装路径
SOFT_NAME=${SOFT_PATH##*/}  # 传入的软件名称

NEED_LDCONFIG=0             # 需要调用 ldconfig 

_MATCH=${ALL_TYPE/"$OPT_TYPE"/""}
if [[ "$_MATCH" == "$ALL_TYPE" ]]; then
    echo The TYPE not matched. TYPE must be 'create' 'update' or  'delete'.
    exit 0
fi

#echo find $SOFT_PATH -name bin -or -name sbin -or -name "man[1-9]" -or -name etc -or -name conf -or -name config
ALL_FILE=`find $SOFT_PATH -name bin -or -name sbin -or -name "man[1-9]" -or -name etc -or -name conf -or -name config -or -name lib -or -name library -or -name libraries -or -name include`
for FILE_PATH in $ALL_FILE; do
    #echo $FILE_PATH
    # 获得类型
    _TYPE=${FILE_PATH##*/}
    case $_TYPE in
        'lib' | 'library' | 'libraries')
            NEED_LDCONFIG=1
            # /etc/ld.so.conf.d/hp/* 处理添加文件
            LD_FILE="/etc/ld.so.conf.d/hp/$SOFT_NAME"
            case $OPT_TYPE in
                'create' | 'update')
                    if [[ ! -e $LD_FILE ]]; then


                        echo "$FILE_PATH" > $LD_FILE   # 创建文件
                    else
                        echo "$FILE_PATH" >> $LD_FILE  # 追加记录
                    fi
                ;;
                'delete')
                    rm -f $LD_FILE
                ;;
            esac
        ;;
        'include')
            # /usr/include/hp/* 处理软链接
            LINK_NAME="/usr/include/hp/$SOFT_NAME"
            case $OPT_TYPE in
                'create')
                    if [[ ! -e $LINK_NAME ]]; then
                        #echo ln -s $FILE_PATH $LINK_NAME
                        ln -s $FILE_PATH $LINK_NAME
                    else
                        echo "Link $LINK_NAME exists, link to `pwd $LINK_NAME`."
                    fi
                ;;
                'update')
                    #echo ln -s $FILE_PATH $LINK_NAME
                    [[ -L $LINK_NAME ]] || ln -s $FILE_PATH $LINK_NAME
                ;;
                'delete')
                    #echo unlink $LINK_NAME
                    [[ -L $LINK_NAME ]] && unlink $LINK_NAME
                ;;
            esac
        ;;
        'config'|'conf'|'etc')  # 创建项目子目录 
            LINK_NAME="/hp/etc/$SOFT_NAME"
            case $OPT_TYPE in
                'create')
                    if [[ ! -e $LINK_NAME ]]; then
                        #echo ln -s $FILE_PATH $LINK_NAME
                        ln -s $FILE_PATH $LINK_NAME
                    else
                        echo "Link $LINK_NAME exists, link to `pwd $LINK_NAME`."
                    fi
                ;;
                'update')
                    #echo ln -s $FILE_PATH $LINK_NAME
                    [[ -L $LINK_NAME ]] || ln -s $FILE_PATH $LINK_NAME
                ;;
                'delete')
                    #echo unlink $LINK_NAME
                    [[ -L $LINK_NAME ]] && unlink $LINK_NAME
                ;;
            esac
        ;;
        'bin' | 'sbin' | man* )
            for _FILE in $FILE_PATH/*; do
                #echo $_FILE
                if [[ ${_TYPE:0:3} == "man" ]]; then
                    LINK_NAME="/hp/man/$_TYPE/"${_FILE##*/}
                else
                    LINK_NAME="/hp/$_TYPE/"${_FILE##*/}
                fi
                case $OPT_TYPE in
                    'create')
                        if [[ ! -e $LINK_NAME ]]; then
                            #echo ln -s $_FILE $LINK_NAME
                            ln -s $_FILE $LINK_NAME
                        else
                            echo "Link $LINK_NAME exists, Can not create it."
                        fi
                    ;;
                    'update')
                        #echo ln -f -s $_FILE $LINK_NAME
                        ln -f -s $_FILE $LINK_NAME
                    ;;
                    'delete')
                        #echo unlink $LINK_NAME
                        [[ -L $LINK_NAME ]] && unlink $LINK_NAME
                    ;;
                esac
            done
        ;;
    esac
done

[[ $NEED_LDCONFIG == 1 ]] && ldconfig
